<?php

// Define path to application directory
defined('APPLICATION_PATH')
    || define('APPLICATION_PATH', realpath(dirname(__FILE__) . '/../application'));

// Define application environment
defined('APPLICATION_ENV')
    || define('APPLICATION_ENV', (getenv('APPLICATION_ENV') ? getenv('APPLICATION_ENV') : 'production'));

// Define application ini file constant
defined('INI_FILE')
    || define('INI_FILE', (getenv('INI_FILE') ? getenv('INI_FILE') : APPLICATION_PATH . '/configs/application.ini'));

// Ensure library/ is on include_path
set_include_path(implode(PATH_SEPARATOR, array(
    realpath(APPLICATION_PATH . '/../library'),
    get_include_path(),
)));

/** Zend_Application */
require_once 'Zend/Application.php';

// Creating application
$application = new Zend_Application(
    APPLICATION_ENV,
    APPLICATION_PATH . '/configs/application.ini'
);

// Bootstrapping resources
$bootstrap = $application->bootstrap()->getBootstrap();
$bootstrap->bootstrap(array('Doctrine'));

// create a instance of EntityManager
$em = Zend_Registry::get('doctrine')->getEntityManager();


//************** added by Aob *****************************************
//************** here start the geocoding address process**************

$MAPS_HOST = "maps.google.com"; //google map - web service
//unique key generated by Google Maps

//google maps key created for the domain http://its-rnd.amediacreative.com (Production)
$gMapKeyProd = 'ABQIAAAAYgD_79g_LR3QPyDIhdIESxRpFZLO2p6ej3M1C9rpB85FExQ6axSQ-9GFEf7oPWJdDBzHJQgLKDpbNg';
//google maps key created for the local domain http://www.its.dev (Development)
$gMapKeyDev  = "ABQIAAAAYgD_79g_LR3QPyDIhdIESxQZakwMX7zjCGlOKaVjqi8A_ne4JhS9Qzlti89a2LeukNQY2n1zsm4wsA";

$delay = 0;  //counting
//$base_url = "http://" . $MAPS_HOST . "/maps/geo?output=xml" . "&key=" . $gMapKeyProd; //URL
$base_url = "http://maps.googleapis.com/maps/api/geocode/xml?address=";


//get data from table parameters
$qb = $em->createQueryBuilder();

$qb->add('select', 'p')
   ->add('from', 'Amedia\Entity\Params p');

$queryPar = $qb->getQuery();
$resultParams = $queryPar->getArrayResult();

//echo '<pre>'; var_dump($resultParams); echo '</pre>'; die;

//set data getted from table 'params'
$ID_params  = $resultParams[0]["ID_params"];
$par_date_time = $resultParams[0]["param_date"];
$par_is_busy = $resultParams[0]["param_is_busy"];
$par_email  = $resultParams[0]["param_email"];
$par_email2 = $resultParams[0]["param_email2"];

$date_now_time = new DateTime("NOW");

//parse date time in date format
$date_now = $date_now_time->format("Y-m-d");
$par_date = $par_date_time->format("Y-m-d");


$email_data = array();


//if the limit is exceeded exit from the scritp
if ($date_now==$par_date && $par_is_busy=="yes")
{
    echo "Google Maps limit request exceeded for the day."; die();
}

//create sql sentence
$sentencia = "SELECT a.ID_carrierData, b.ID_carrier, b.carrier_name, a.cd_address, a.cd_city, a.cd_lat, a.cd_lng, a.cd_city, a.cd_country FROM tms_amedia_carrier_data a inner join carrier b on a.ID_carrier = b.ID_carrier where isnull(a.cd_lat) and isnull(a.cd_lng) and a.cd_problem = 'no' LIMIT 30";

//$sentencia = "SELECT a.ID_carrierData, b.ID_carrier, b.carrier_name, a.cd_address, a.cd_city, a.cd_lat, a.cd_lng, a.cd_city, a.cd_country FROM tms_amedia_carrier_data a inner join carrier b on a.ID_carrier = b.ID_carrier where a.ID_carrierData = 35678  LIMIT 100";
//$sentencia = "SELECT * FROM carrier where isnull(carrier_lat) and isnull(carrier_lng) and carrier_problem = 'no' and id_company=12";

//Create a native query, so the Doctrine Parser don't will controle it
$rsm = new Doctrine\ORM\Query\ResultSetMapping;
$rsm->addEntityResult('Amedia\Entity\Carrier\CarrierData', 'c');
$rsm->addFieldResult('c', 'ID_carrierData', 'ID_carrierData');
$rsm->addFieldResult('c', 'carrier', 'carrier');
$rsm->addFieldResult('c', 'cd_city', 'cd_city');
$rsm->addFieldResult('c', 'cd_address', 'cd_address');
$rsm->addFieldResult('c', 'cd_country', 'cd_country');
$rsm->addFieldResult('c', 'cd_lat', 'cd_lat');
$rsm->addFieldResult('c', 'cd_lng', 'cd_lng');
$rsm->addJoinedEntityResult('Amedia\Entity\Carrier\Carrier' , 'a', 'c', 'carrier');
$rsm->addFieldResult('a', 'ID_carrier', 'ID_carrier');
$rsm->addFieldResult('a', 'carrier_name', 'carrier_name');

$query = $em->createNativeQuery($sentencia, $rsm);

$carrierList = $query->getArrayResult();

$aux = 0;
$index = 0;

//get over the list
for ($i = 0; $i < count($carrierList);$i++)
{
  $geocode_pending = true;
  $cont = 0;

  //parser address
  //while ($geocode_pending)
  //{

    sleep(2); // wait 2 seconds since geocode from google has a limit of 20 by second.

    //echo "Geocoding Carrier ID: ".$carrierList[$i]['carrier']['ID_carrier'].' - '.$carrierList[$i]['carrier']['carrier_name']." ...\n";

    $address = $carrierList[$i]['cd_address'].",".$carrierList[$i]['cd_city'].",".$carrierList[$i]['cd_country'];
	$city    = ((isset($carrierList[$i]['cd_city'])) and $carrierList[$i]['cd_city'] != '')?  "&components=locality:".$carrierList[$i]['cd_city'] : '';
	$country = ((isset($carrierList[$i]['cd_country'])) and $carrierList[$i]['cd_country'] != '')?  "|country:".$carrierList[$i]['cd_country'] : '';

//1200 OLD YORK RD, ABINGTON, US
	//echo "address: ". $address. "\n";

    //parser url
    //$request_url = $base_url . urlencode(htmlentities($address))."&sensor=false";
    //$request_url = $base_url. urlencode(htmlentities($address))."&sensor=false".$city.$country; //URL;

    $request_url = $base_url. urlencode(htmlentities($address))."&sensor=false"; //URL;

    //echo '<pre>'; var_dump($request_url); echo '</pre>';

	//echo '<pre>'; var_dump($request_url); echo '</pre>'; die();

    //Post to google maps, get the request and load in a xml file
    $xml = simplexml_load_file($request_url); //load a request and then parser it
    //$status = $xml->Response->Status->code;  //get the status for the request
	$status = $xml->status;

	echo "Geocoding CarrierData ID: ". $carrierList[$i]['ID_carrierData']." status: ".$status." \n";


   //if status is 200 - Sucessfull geocode
    if (strcmp($status, "OK") == 0) {



      $geocode_pending = false;


      /*$coordinates = $xml->Response->Placemark->Point->coordinates; //get coordinates
      $coordinatesSplit = explode(",", $coordinates); //split coordinates

      // Format: Longitude, Latitude
      $lat = $coordinatesSplit[1]; //get latitud
      $lng = $coordinatesSplit[0]; //get longitude*/

      //update latitude and longitude in carrier array
      /*$carrierList[$i]['cd_lat'] = $lat ;
      $carrierList[$i]['cd_lng'] = $lng;*/

	  $carrierList[$i]['cd_lat']  = $xml->result->geometry->location->lat ;
      $carrierList[$i]['cd_lng'] = $xml->result->geometry->location->lng;

        $carrier = $em->find('Amedia\Entity\Carrier\CarrierData', $carrierList[$i]['ID_carrierData']);
        $field['cd_lat'] = $carrierList[$i]['cd_lat'];
        $field['cd_lng'] = $carrierList[$i]['cd_lng'];
        //save
        $carrier->setData($field);
        $em->persist($carrier);
$em->flush();
      //echo '<pre>'; var_dump($xml->result->geometry->location->lat.' - '.$xml->result->geometry->location->lng); echo '</pre>'; die;


      //the first succefull geocoding - save in the DB the date and the field para_is_buy = no
      if($aux ==0){
          //save state in table params
          $params = $em->find('Amedia\Entity\Params', $ID_params);
          $paramsList = array();

          foreach ($params as $c){
             $paramsList[] = array('ID_params'=>$c->ID_params, 'param_date'=>$c->param_date, 'param_email'=>$c->param_email, 'param_email2'=>$c->param_email2,'param_is_busy'=>$c->param_is_busy);
          }

          $values = $paramsList;

           //change the field indicating that Google Maps is not busy and update the date
          $params->param_is_busy = "no";
          $params->param_date = new DateTime("NOW");
          $params->setData($values);
          $em->persist($params);
          $em->flush();
          $aux++;
      }

    // LIMIT EXCEDED
    } else if (strcmp($status, "OVER_QUERY_LIMIT") == 0) {
       /*$delay = 10000;
       $cont += 1;
       echo "Wating... try:".$cont."\n";*/
       //if ($cont == 3){
		$geocode_pending = false; //exit

		 //save state in table params
		$params = $em->find('Amedia\Entity\Params', $ID_params);
		$paramsList = array();

		foreach ($params as $c){
		   $paramsList[] = array('ID_params'=>$c->ID_params,
						'param_date'=>$c->param_date,
						'param_email'=>$c->param_email,
						'param_email2'=>$c->param_email2,
						'param_is_busy'=>$c->param_is_busy,
						'param_count_email'=>$c->param_count_email
						);
		}

		$values = $paramsList;

		$params->param_is_busy = "yes";
		$params->param_date = new DateTime("NOW");
		$params->setData($values);
		$em->persist($params);
		$em->flush();

		echo "limit EXCEEDED"; break;
      // }

    }else {

         $field_upd = array();
         //update field
         $carrier_upd = $em->find('Amedia\Entity\Carrier\CarrierData', $carrierList[$i]['ID_carrierData']);

         $field_upd['cd_problem'] = 'yes';

        //save
         $carrier_upd->setData($field_upd);
         $em->persist($carrier_upd);
         $em->flush();

       // failure to geocode
        $geocode_pending = false;

        $now = new DateTime("NOW");
        $date_now_time = $now->format("Y-m-d H:i:s");

        $email_body = "";
        $email_body.= "Address: " . $address . " failed to geocoded. ID: ". $carrierList[$i]['ID_carrierData']." \n";
        $email_body.= "Received status: " . $status . "\n";
        $email_body.= "DateTime: " . $date_now_time . "\n";

        $email_data[$index] = $email_body;

        $index++;


    }
    //waith
    //usleep($delay);
  //}
}

//Update the carriers in the BD
$field = array();
// for ($i = 0; $i < count($carrierList);$i++){
//     $carrier = $em->find('Amedia\Entity\Carrier\CarrierData', $carrierList[$i]['ID_carrierData']);
//     $field['cd_lat'] = $carrierList[$i]['cd_lat'];
//     $field['cd_lng'] = $carrierList[$i]['cd_lng'];
//     //save
//     $carrier->setData($field);
//     $em->persist($carrier);

// }

//$em->flush();



       //TODO mostrar en mensajes de error - mientras para depurar
      /*  $email_body = "";
        $email_body.= "Address: " . $address . " failed to geocoded. "."\n";
        $email_body.= "Received status: " . $status . "\n";
        $email_body.= "DateTime: " . $date_now_time . "\n";*/

        if (COUNT($email_data)>0){
            $body_email = '';
            $email = new Zend_Mail();
            $email->setSubject('Geocoding Address Information');
            $email->setFrom("resources@amediacreative.com", 'Support');
            $email->addTo("ray@hudsonfiber.com");
            if ($par_email != "" || $par_email != "null"){
                $email->addTo($par_email);
            }
            if ($par_email2 != "" || $par_email2 != "null"){
                $email->addTo($par_email2);
            }
            for ($i = 0; $i < count($email_data);$i++){
                 $body_email .= $email_data[$i];
            }
                // $body_email .= '/n';
                 $email->setBodyText($body_email);
                 $email->send();
				 // echo $body_email;
        }

//TODO mostrar mensaje
echo "Geocoding Sucessfull"; die();